<?xml version="1.0" encoding="utf-8"?>
<editor:XModelEditor xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx" 
					 xmlns:editor="com.anywarefx.editor.*" 
					 xmlns:fx-editor="com.drawfx.fx.editor.*"
					 width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
		/*
		Copyright (c) 2013 - 2015 Dave Jackson
		
		MIT License
		
		Permission is hereby granted, free of charge, to any person obtaining
		a copy of this software and associated documentation files (the
		"Software"), to deal in the Software without restriction, including
		without limitation the rights to use, copy, modify, merge, publish,
		distribute, sublicense, and/or sell copies of the Software, and to
		permit persons to whom the Software is furnished to do so, subject to
		the following conditions:
		
		The above copyright notice and this permission notice shall be
		included in all copies or substantial portions of the Software.
		
		THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
		EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
		MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
		NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
		LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
		OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
		WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
		*/		
		
		import com.anywarefx.manager.XSelectionManager;
		import com.anywarefx.model.IModel;
		import com.anywarefx.view.IView;
		import com.drawfx.fx.model.FxModel;
		import com.drawfx.fx.model.IFxEnabledModel;
		
		import mx.events.PropertyChangeEvent;
		
		
		[Bindable] private var _editable:Boolean;
		[Bindable] private var _fxModel:FxModel;
		[Bindable] private var _selectionManager:XSelectionManager;
		
		
		public function get editable():Boolean
		{
		return _editable;
		}
		
		public function set editable(value:Boolean):void
		{
		_editable = value;
		}
		
		
		public function get selectionManager():XSelectionManager
		{
		return _selectionManager;
		}
		
		public function set selectionManager(value:XSelectionManager):void
		{
		_selectionManager = value;
		_selectionManager.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, onSelectionChange);
		updateModel(_selectionManager.lastSelection);
		}
		
		
		override public function set model(value:IModel):void
		{
		if (value is IFxEnabledModel)
		{
		super.model = value["fx"];
		_fxModel = super.model as FxModel;
		}
		}
		
		
		private function onSelectionChange(event:PropertyChangeEvent):void
		{
		if (event.property == "lastSelection")
		{
		updateModel(event.newValue as IView);
		}
		else if (event.property == "count")
		{
		updateModel(_selectionManager.lastSelection);
		}
		}
		
		private function updateModel(view:IView):void
		{
		editable = (view != null && view.model is IFxEnabledModel);
		if (editable)
		{
		model = view.model;
		}
		else
		{
		for each (var selection:IView in selectionManager.selections)
		{
		editable = (selection != null && selection.model is IFxEnabledModel);
		if (editable)
		{
		model = selection.model;
		break;
		}
		}
		}
		/* TODO
		if (!editable)
		{
		model = _defaults;
		}
		*/
		}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:Accordion top="5" left="5" bottom="5" right="5">
		<s:NavigatorContent width="100%" height="100%" label="Drop Shadow">
			<fx-editor:XDropShadowEditor 
				id="_dropShadowEditor" 
				enabled="{_editable}"
				model="{_fxModel.dropShadow}" 
				selectionManager="{_selectionManager}"
				context="{context}"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Glow">
			<fx-editor:XGlowEditor 
				id="_glowEditor" 
				enabled="{_editable}"
				model="{_fxModel.glow}" 
				selectionManager="{_selectionManager}"
				context="{context}"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Bevel">
			<fx-editor:XBevelEditor 
				id="_bevelEditor" 
				enabled="{_editable}"
				model="{_fxModel.bevel}" 
				selectionManager="{_selectionManager}"
				context="{context}"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Blur">
			<fx-editor:XBlurEditor 
				id="_blurEditor" 
				enabled="{_editable}"
				model="{_fxModel.blur}" 
				selectionManager="{_selectionManager}"
				context="{context}"/>
		</s:NavigatorContent>
	</mx:Accordion>
	
</editor:XModelEditor>
